// Interfaz 
public interface IPersonalHospitalario
{
    void AtenderPaciente();
    void AdministrarMedicamento();
}

// Clase abstracta 
public abstract class PersonalHospitalario : IPersonalHospitalario
{
    // Atributos/propiedades
    public string Nombre { get; set; }
    public int Edad { get; set; }
    public string Identificacion { get; set; }

    // Métodos de la interfaz
    public abstract void AtenderPaciente();
    public abstract void AdministrarMedicamento();

    // Método adicional
    public abstract void ParticiparEnCirugia();
}

// Clase médico 
public class Medico : PersonalHospitalario
{
    public string Especialidad { get; set; }

    public override void AtenderPaciente()
    {
        Console.WriteLine($"{Nombre} está atendiendo a un paciente.");
    }

    public override void AdministrarMedicamento()
    {
        Console.WriteLine($"{Nombre} está administrando medicamentos.");
    }

    public void RecetarMedicamento()
    {
        Console.WriteLine($"{Nombre} está recetando medicamentos.");
    }

    public override void ParticiparEnCirugia()
    {
        Console.WriteLine($"{Nombre} está participando en una cirugía.");
    }
}

// Clase enfermera 
public class Enfermera : PersonalHospitalario
{
    public string Turno { get; set; }

    public override void AtenderPaciente()
    {
        Console.WriteLine($"{Nombre} está atendiendo a un paciente.");
    }

    public override void AdministrarMedicamento()
    {
        Console.WriteLine($"{Nombre} está administrando medicamentos.");
    }

    public override void ParticiparEnCirugia()
    {
        Console.WriteLine($"{Nombre} está participando en una cirugía.");
    }

    public void MonitorearPaciente()
    {
        Console.WriteLine($"{Nombre} está monitoreando al paciente.");
    }
}

// Clase Paramédico 
public class Paramedico : PersonalHospitalario
{
    public string AreaDeTrabajo { get; set; }

    public override void AtenderPaciente()
    {
        Console.WriteLine($"{Nombre} está atendiendo a un paciente.");
    }

    public override void AdministrarMedicamento()
    {
        Console.WriteLine($"{Nombre} está administrando medicamentos.");
    }

    public override void ParticiparEnCirugia()
    {
        Console.WriteLine($"{Nombre} no participa en cirugías.");
    }
}

// Clase especialista 
public class Especialista : PersonalHospitalario
{
    public string CampoDeEspecialidad { get; set; }

    public override void AtenderPaciente()
    {
        Console.WriteLine($"{Nombre} no atiende pacientes directamente.");
    }

    public override void AdministrarMedicamento()
    {
        Console.WriteLine($"{Nombre} no administra medicamentos.");
    }

    public void RecetarMedicamento()
    {
        Console.WriteLine($"{Nombre} está recetando medicamentos.");
    }

    public override void ParticiparEnCirugia()
    {
        Console.WriteLine($"{Nombre} está participando en una cirugía como especialista.");
    }
}

// Program 
class Program
{
    static void Main()
    {
        // Cambiando los nombres de las instancias
        Medico medico = new Medico { Nombre = "Dr. Carlos", Especialidad = "Cardiología" };
        Enfermera enfermera = new Enfermera { Nombre = "Laura", Turno = "Noche" };
        Paramedico paramedico = new Paramedico { Nombre = "Javier", AreaDeTrabajo = "Emergencias" };
        Especialista especialista = new Especialista { Nombre = "Dra. Sofia", CampoDeEspecialidad = "Neurología" };

        medico.AtenderPaciente();
        medico.AdministrarMedicamento();
        medico.ParticiparEnCirugia();
        medico.RecetarMedicamento();

        enfermera.AtenderPaciente();
        enfermera.AdministrarMedicamento();
        enfermera.ParticiparEnCirugia();
        enfermera.MonitorearPaciente();

        paramedico.AtenderPaciente();
        paramedico.AdministrarMedicamento();
        paramedico.ParticiparEnCirugia(); // Este método no hará nada relevante para paramédicos

        especialista.ParticiparEnCirugia();
        especialista.RecetarMedicamento();
    }
}
